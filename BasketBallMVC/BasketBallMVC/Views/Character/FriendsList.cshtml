@using PagedList;
@using PagedList.Mvc;
@model BasketBallMVC.ViewModel.FriendsListViewModel
@{
    ViewBag.Title = "FriendsList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="col-md-12" id="contentMain">
    <div class="col-md-12" id="textWitaj">Twoi znajomi!</div>
    <img src="../Content/Images/player-11.png" class="col-md-3 imgs" />
    <div class="col-md-6" id="inContentMainFriends">



        <div id="custom-search-input">
            <div class="input-group col-md-6 col-md-offset-3 col-xs-6 col-xs-offset-3">
                <input type="text" id="invitedEmail" class="search-query form-control" placeholder="Dodaj nowego znajmego..." />
                <span class="input-group-btn">
                    <button class="btn btn-default" id="addFriend" type="submit">
                        <span  class="glyphicon glyphicon-plus-sign"></span>
                    </button>
                </span>
            </div>
        </div>

        <div id="font20">
            @if (Model.CharacterForFriendListPaged != null && Model.CharacterForFriendListPaged.Count != 0)
            {
                foreach (var item in Model.CharacterForFriendListPaged)
                {
                    <div id="friendsCont">
                        <div class="col-md-4 col-xs-4 rankingFontSize">
                            @item.Nick
                        </div>
                        <div class="col-md-2 col-xs-2">
                            @using (Html.BeginForm("CharacterProfil", "Character", new { nick = item.Nick }))
                            {
                            <button type="submit" class="btn btn-info glyphicon glyphicon-user rankingFontSize"></button>
                            }
                        </div>
                        <div class="col-md-2 col-xs-2">
                            @if (item.isAvalibleToAttack) {
                                using (Html.BeginForm("VsSelectedPlayer", "Game", new { oponentNick = item.Nick }))
                                {
                            <button type="submit" id="battleVs_@item.Nick" class="btn btn-danger glyphicon glyphicon-knight rankingFontSize"></button>
                                }
                            }
                        </div>
                        <div class="col-md-2 col-xs-2">
                            <button type="button" id="RemoveFriend_@item.Nick" name="RemoveFriend" class="btn btn-success glyphicon glyphicon-trash rankingFontSize"></button>
                        </div>
                        <div class="col-md-2 col-xs-2">
                            <button type="button" name="BtnNewMessage" id="messageTo_@item.Nick" class="btn btn-success glyphicon glyphicon-envelope rankingFontSize"></button>
                        </div>
                    </div>
                }
                
                <div style="text-align:center; position:absolute; bottom:0; position: absolute; margin-left: auto; margin-right: auto; left: 0; right: 0;">
                    @Html.PagedListPager(Model.CharacterForFriendListPaged, page => Url.Action("FriendsList", new { page }), PagedListRenderOptions.ClassicPlusFirstAndLast)
                </div>
            }
            else
            {
                <div style="text-align:center; font-size:20px">
                    <text>Aktualnie nie masz żadnych znajomych</text>
                </div>
            }
        </div>




    </div>
    <img src="../Content/Images/player-22.png" class="col-md-3 imgs" />
    <link href="~/Content/Ranking.css" rel="stylesheet" />
</div>
@section ScriptBottom {
<script src="~/Scripts/message_script.js"></script>
<script>
    $(document).ready(function () {
        var tempDomain = "";
        if (document.domain === "localhost") {
            tempDomain = "/BasketBallMVC"
        }

        $("#invitedEmail").keyup(function (event) {
            if (event.keyCode == 13) {
                $("#addFriend").click();
            }
        });

        $(document).on('click', '[name="RemoveFriend"]', function () {
            nick = $(this).attr("id");
            nick = nick.replace("RemoveFriend_", "")
            bootbox.confirm({
                message: "Czy na pewno chcesz usunąć " + nick + " ze znajomych?" ,
                buttons: {
                    confirm: {
                        label: 'Tak',
                        className: 'btn-danger'
                    },
                    cancel: {
                        label: 'Nie',
                        className: 'btn-success'
                    }
                },
                callback: function (result) {
                    if (result) {
                        $.ajax({
                            type: "GET",
                            url: tempDomain + "/Character/RemoveFriend",
                            data: { friendNick: nick },
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            complete: function () {
                                location.reload();
                            }
                        });
                    }
                }
            });
        });
        $(document).on('click', '[id="addFriend"]', function () {
            bootbox.confirm({
                message: "Czy na pewno chcesz wysłać zaproszenie do " + $("#invitedEmail").val(),
                buttons: {
                    confirm: {
                        label: 'Tak',
                        className: 'btn-danger'
                    },
                    cancel: {
                        label: 'Nie',
                        className: 'btn-success'
                    }
                },
                callback: function (result) {
                    if (result) {

                        $.ajax({
                            type: "GET",
                            url: tempDomain + "/Character/CreateFriendInvitation",
                            data: { invitedEmail: $("#invitedEmail").val() },
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (data) {
                                var obj = jQuery.parseJSON(data);
                                if (obj.status == "Success") {
                                    location.reload();
                                } else if (obj.status == "UserException") {
                                    bootbox.alert("Ten gracz nie istnieje");
                                }
                                else if (obj.status == "InvitationException") {
                                    bootbox.alert("Istnieje już takie zaproszenie");
                                }
                                else if (obj.status == "FriendException") {
                                    bootbox.alert("Masz już takiego znajomego");
                                }
                                else if (obj.status == "SelfException") {
                                    bootbox.alert("Nie możesz dodać samego siebie do znajomych");
                                }
                            }
                        });
                    }
                }
            });
        });
    });
</script>
}